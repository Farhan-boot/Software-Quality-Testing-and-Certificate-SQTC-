@using PTSL.GENERIC.Web.Core.Helper.Enum.Project
@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.Project.TaskVM>
@{
    ViewBag.Title = "Assigned Tasks With Time Track";
    ViewBag.activeMenu = "Assigend Tasks & Time Tracking";
}
<style>
    td {
        padding-left: 3% !important;
        padding-top: 1% !important;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Assigned Tasks With Time Track</h4>
                </div>
                @* <div class="col-md-2 text-right">
                    <a href="/Task/Create" class="badge badge-success badge-shadow">Create New</a>
                </div> *@
            </div>
            <div class="card-body">
                <div class="table-responsive  mt-2 green-card">
                    <form action="Search" class="form-horizontal">
                        <div class="col-md-12 ">
                            <div class="row custom">
                                <div class="col-6 p-1">
                                    <label class="m-0">Project <span style="color: red;"></span></label>
                                    @Html.DropDownList("ProjectRequestId", null, "Choose Project", htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-6 p-1">
                                    <label class="m-0">Assignee <span style="color: red;"></span></label>
                                    @Html.DropDownList("AssigneeId", null, "Select Assignee", htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-6 p-1">
                                    <label class="m-0">Task Id</label>
                                    <input type="text" class="form-control col-md-12" id="TaskId" name="TaskId" value="@ViewBag.TaskId" placeholder="Enter Task Id">
                                </div>
                                
                                <div class="col-6 p-1">
                                    <label class="m-0">Dead line</label>
                                    <input type="date" class="form-control col-md-12" id="Deadline" name="Deadline" value="@ViewBag.Deadline = Deadline " placeholder="Enter Dead line">
                                </div>
                            </div>

                        </div>

                        <div class="form-group col-md-12">
                            <button id="submit" class="btn btn-primary submit-btn pull-right btn-sm">Search</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="taskTableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Task ID</th>
                                <th>Project ID</th>
                                <th>Task Type</th>
                                <th>Assignee</th>
                                <th>Allocated Time</th>
                                <th>Time Tracked</th>
                                <th>Due Time</th>
                                @* <th>Creation Date</th> *@
                                <th>Deadline</th>
                                <td>Action</td>
                            </tr>
                        </thead>
                        @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@data.TaskId</td>
                                        <td>@data.ProjectRequest?.ProjectCode</td>
                                        <td>@data.TaskType?.TaskTypeName</td>
                                        <td>@data.User?.UserName</td>
                                        <td>@data.TaskEstimationHour</td>
                                        <td>@data.TotalTrackedTime</td>
                                        <td>@data.TotalDueTime</td>
                                        @* <td>@data.CreatedAt.ToString("dd/MM/yyyy")</td> *@
                                        <td>@data.TaskDeadline.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            @* <a href="" class="btn btn-primary btn-sm">Edit</a> *@
                                            @* <a href="" class="btn btn-info btn-sm">Details</a> *@
                                            @* <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button> *@
                                            <button data-toggle="modal" data-target="#trackingModal" class="btn btn-primary btn-sm" onclick="SetTaskIdWithRefresh(@data?.Id, @data?.TotalDueTime)" @* style="width: 100%;margin-top: 2px;margin-top: 2px;" *@>Time Track</button>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Start-->
<div class="modal fade" id="trackingModal" tabindex="-1" role="dialog" aria-labelledby="trackingModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trackingModalLabel">Time Tracking</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="taskId" />
                <input type="hidden" id="originalRemainTime" />
                <div class="row  custom">
                    <div class="col-12 p-1">
                        <fieldset class="p-2">
                            <legend class="float-none w-auto">Time Tracking</legend>
                            <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">Time Spent (Hour) <span style="color: red;">*</span></label>
                                <input type="number" min="0" onchange="onChangeSpentHour()" class="form-control" id="SpentHour" name="SpentHour" placeholder="0h" required>
                            </div>
                            @* <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">User Name <span style="color: red;">*</span></label>
                            </div> *@
                            <div class="col-6" style="padding-left: 0px;float:left">
                                <label class="m-0">Remaining Time (Hour) <span style="color: red;">*</span></label>
                                <input type="number" id="RemainingTime" name="RemainingTime" placeholder="3h" readonly>
                            </div>
                        </fieldset>
                        
                    </div>
                    
                </div>
                <div class="row custom">
                    <div class="col-12 p-1">
                        <fieldset class="p-2">

                            <div class="col-12" style="padding-left: 0px">
                                <label class="m-0">Task Description</label>
                                <textarea type="text" name="TrackDescription" id="TrackDescription" class="form-control" style="width: 100%;" placeholder="Enter Task Description"></textarea>
                            </div>
                            <div class="col-12" style="padding-left: 0px">
                                <label for="inputTaskStatusId">Task Status<span style="color:red;">*</span></label>
                                @Html.DropDownList("TaskStatusId", Html.GetEnumSelectList<TaskOfProjectStatus>(), "Choose..", htmlAttributes: new { @class = "form-control", @required = "required" })
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                <button onclick="SaveTaskTimeTracking()" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script>
    $(document).ready(function () {
        $('#taskTableExport_filter').DataTable({
            pageLength: 5
        });
    });

    function onChangeSpentHour(hr){
       
        var spentHour = parseFloat($("#SpentHour").val());
        var remainHr = parseFloat($("#originalRemainTime").val());
        // $("#SpentHour").attr({ "max": remainHr });
        // if (spentHour > remainHr) {
        //     $("#SpentHour").val(0);
        //     alert("You can't track time higher than remaining.");
        //     $("#RemainingTime").val(remainHr);
        //     return;
        // }
        var dueTime = parseFloat(remainHr - spentHour).toFixed(2);
        $("#RemainingTime").val(dueTime);
    }
    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this imaginary file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = { 'id': id };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Client/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        swal("Deleted!", "Your imaginary file has been deleted.", "success");
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Your imaginary file has not been deleted.", "error");
                }
            });
        });
    }

    function SetTaskIdWithRefresh(taskId, dueTime){
       
        $("#taskId").val(taskId);
        $("#RemainingTime").val(dueTime);
        $("#originalRemainTime").val(dueTime);
        // $("#SpentHour").attr({ "max": dueTime });
    }

    function SaveTaskTimeTracking() {
       
        var spentHour = parseInt($("#SpentHour").val());
        var remainingTime = parseInt($("#RemainingTime").val());
        var tracDescription = $("#TrackDescription").val();
        var taskStatusId = $("#TaskStatusId").val();
        var taskId = $("#taskId").val();



        var TaskTrackingVM = {
            "TaskOfProjectId": taskId,
            "TimeSpentHour": spentHour,
            "RemainingTimeHour": remainingTime,
            "TrackingDescription": tracDescription,
            "TaskOfProjectStatus": taskStatusId
        }

        $.ajax({
            type: "POST",
            url: "/Task/SaveTimeTracking",
            data: TaskTrackingVM,
            cache: false,
            dataType: 'json',
            success: function (response) {
                if (response.Success == true) {
                    swal({
                        title: "Success",
                        text: response.Message,
                        type: "success"
                    },
                        function () {
                            window.location.href = "/Task/UserWiseIndex";
                        }
                    );
                }
                //committeeDesignationId.append($('<option></option>').val("").html("Select Designation"));
                //$.each(response.Entity, function (id, option) {
                //    committeeDesignationId.append($('<option></option>').val(option.Id).html(option.Name));
                //});
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });



        //alert(id);
    }
</script>

