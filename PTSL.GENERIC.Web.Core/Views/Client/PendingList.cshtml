@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.Sqtc_Client.ClientVM>
@{
    //ViewBag.Title = "Index";
    // var DynamicUserRoleName = ViewBag.RoleName;
    // var DynamicUserRoleId = ViewBag.RoleId;
    ViewBag.activeMenu = "Pending Registration Requests";
}
<!-- Modal Start-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Permission Settings</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="modalClientId" />
                <form id="clientApprovelForm" class="card-body card-primary">
                    <div class="row  custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <legend class="float-none w-auto">Map To User</legend>
                                <div class="col-6" style="padding-left: 0px;float:left">
                                    <label class="m-0">User Role Name <span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="RoleName" name="RoleName" disabled>
                                    <input type="hidden" class="form-control" id="RoleId" name="RoleId" disabled>
                                    <input type="hidden" class="form-control" id="PermissionRowSettingsId" name="PermissionRowSettingsId" disabled>
                                </div>
                                <div class="col-6" style="padding-left: 0px;float:right">
                                    <label class="m-0">Select User: <span style="color: red;">*</span></label>
                                    <select id="UserIdDropdown" required="">
                                    </select>
                                </div>

                            </fieldset>
                        </div>
                    </div>
                    <div class="row custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                @* <div class="row" style="margin:2px">
                                    <div class="col-6" style="padding-left: 0px;float:left">
                                        <label class="m-0">Sending Date <span style="color: red;">*</span></label>
                                        <input type="date" id="SendingDateId" name="SendingDateId" placeholder="Enter Sending Date" required="">
                                    </div>
                                    <div class="col-6" style="padding-left: 0px">
                                        <label class="m-0">Sending Time <span style="color: red;">*</span></label>
                                        <input class="form-control" type="time" id="SendingTimeId" name="SendingTimeId" placeholder="Enter Sending Time" required="">
                                    </div>
                                </div> *@
                                <div class="col-12" style="padding-left: 0px">
                                    <label class="m-0">Remark </label>
                                    <input class="form-control" type="text" id="RemarkId" name="RemarkId" placeholder="Enter Remark">
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </form>
                
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                <button onclick="SaveMapToUser()" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Pending List</h4>
                </div>
                @* <div class="col-md-2 text-right">
                <a href="/Client/Create" class="badge badge-success badge-shadow">Create New</a>
                </div> *@
            </div>
            <div class="card-body">
                <div class="table-responsive mt-2 green-card">
                    <form action="Search" class="form-horizontal">
                        <div class="col-md-12">
                            <div class="row custom">
                                <div class="form-group col-md-4">
                                    <label for="inputOrganizationName">Organization Name</label>
                                    <input type="text" class="form-control" id="OrganizationName" name="OrganizationName" placeholder="Enter Organization Name">
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="inputClientTypen">ClientType <span style="color:red;"></span></label>
                                    @Html.DropDownList("ClientTypeId", null, "Choose..", htmlAttributes: new { @class = "form-control", id = "ClientTypeId" })
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="inputMobileNumber">Mobile Number</label>
                                    <input type="number" class="form-control" id="MobileNumber" name="MobileNumber" placeholder="Enter Mobile Number">
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="inputCreateTime">Created At</label>
                                    <input type="date" class="form-control" id="CreatedAt" name="CreatedAt">
                                </div>

                                @*  <div class="form-group col-md-4">
                                <label for="inputusertype">user type <span style="color:red;">*</span></label>
                                @html.dropdownlist("usertypeid", null, "choose..", htmlattributes: new { @class = "form-control", @required = "required" })
                                </div> *@
                            </div>

                        </div>

                        <div class="form-group col-md-12">
                            <button id="submit" class="btn btn-primary submit-btn pull-right btn-sm">Search</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                    <thead>
                        <tr>
                            <th>SL</th>
                            <th>Name</th>
                            <th>Designation</th>
                            <th>Organization Name</th>
                            <th>Client Type</th>
                            <th>Approval Status</th>
                            <th>Approval Message</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    @{
                        int i = 1;
                    }
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var data in Model)
                            {
                                <tr>
                                    <td>@i</td>
                                    <td>@data.ClientName</td>
                                    <td>@data.Designation?.Name</td>
                                    <td>@data.OrganizationName</td>
                                    <td>@data.UserType</td>
                                    <td>@data.ClientStatus</td>
                                    <td>@data.ApprovalMessage</td>
                                    <td style="width: 20%;">

                                        <a href="/Client/Edit?id=@data.Id" class="btn btn-icon" title="Edit"><img src="~/img/edit.png" /></a>
                                        <a href="/Client/Details?id=@data.Id&backUrl=/Client/PendingList" class="btn btn-icon" title="Details"><img src="~/img/view.png" /></a>
                                        <a onclick="getLogHistory(@data.Id)" class="btn btn-info btn-sm"><i class="fa fa-history" title="View Log History"></i></a>
                                        <a onclick="getCommentHistory(@data.Id)" class="btn btn-info btn-sm"><i class="fa fa-comment" title="View Comment History"></i></a>


                                        @if (data.IsApprovalShow)
                                        {
                                            <button onclick="openModalSet(@data.Id)" class="btn btn-success btn-sm"><i title="Forward" class="fa fa-forward"></i></button>

                                        }
                                        
                                        else if(!data.IsApprovalShow && data.IsAcceptOrReject &&data.ApprovalMessage== null)
                                        {
                                            <button onclick="Accept(@data.Id)" class="btn btn-icon" title="Accept"><img src="~/img/check.png" /></button>
                                            <button onclick="Reject(@data.Id)" class="btn btn-icon" title="Reject"><img src="~/img/remove.png" /></button>
                                        }@* else
                                        {
                                            @data.ApprovalMessage

                                        } *@
                                        @* <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button> *@
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Client Log History Modal Start-->
<div class="modal fade" id="logHistoryModal" tabindex="-1" role="dialog" aria-labelledby="logHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logHistoryModalLabel">Client Log History</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="logHistoryTableId" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Description</th>
                                <th>Created By</th>
                                <th>Created Date</th>
                            </tr>
                        </thead>

                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->
<!-- Client Comment History Modal Start-->
<div class="modal fade" id="commentHistoryModal" tabindex="-1" role="dialog" aria-labelledby="commentHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentHistoryModalLabel">Client Comments </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="commentHistoryTableId" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Sender</th>
                                <th>Receiver</th>
                                <th>Comment</th>
                                @* <th>Description</th> *@
                                <th>Created Date</th>
                            </tr>
                        </thead>

                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->
<!-- Backward Modal Start-->
<div class="modal fade" id="backwardModal" tabindex="-1" role="dialog" aria-labelledby="backwardModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="backwardModalLabel">Backward of Approval Process</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="backwardClientId" />
                <form id="clientBackwardApprovelForm" class="card-body card-primary">
                    <div class="row  custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <legend class="float-none w-auto">Map To User</legend>
                                <div class="col-6" style="padding-left: 0px;float:left">
                                    <label class="m-0">User Role Name <span style="color: red;">*</span></label>
                                    <select id="roleDdlId_Backward" required="">
                                    </select>
                                    <input type="hidden" class="form-control" id="PermissionRowSettingsId_Backward" name="PermissionRowSettingsId_Backward" disabled>
                                </div>
                                <div class="col-6" style="padding-left: 0px;float:right">
                                    <label class="m-0">Select User: <span style="color: red;">*</span></label>
                                    <select id="UserIdDropdown_Backward" required="">
                                    </select>
                                </div>

                            </fieldset>
                        </div>
                    </div>
                    <div class="row custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <div class="row" style="margin:2px">
                                    <div class="col-6" style="padding-left: 0px;float:left">
                                        <label class="m-0">Sending Date <span style="color: red;">*</span></label>
                                        <input type="date" id="SendingDateId_Backward" name="SendingDateId_Backward" placeholder="Enter Sending Date" required="">
                                    </div>
                                    <div class="col-6" style="padding-left: 0px">
                                        <label class="m-0">Sending Time <span style="color: red;">*</span></label>
                                        <input class="form-control" type="time" id="SendingTimeId_Backward" name="SendingTimeId_Backward" placeholder="Enter Sending Time" required="">
                                    </div>
                                </div>
                                <div class="col-12" style="padding-left: 0px">
                                    <label class="m-0">Remark </label>
                                    <input class="form-control" type="text" id="RemarkId_Backward" name="RemarkId_Backward" placeholder="Enter Remark">
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                <button onclick="SaveBackwardProcess()" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5
        });
    });

    function openModalSet(id) {
        var id = parseInt(id);
       
        $.ajax({
            type: "POST",
            url: "/Client/GetApprovalProcessModalData",
            cache: false,
            dataType: 'json',
            data: { "id": id },
            success: function (response) {
               

                $("#RoleName").val(response.Data.RoleName);
                $("#RoleId").val(response.Data.RoleId);
                $("#PermissionRowSettingsId").val(response.Data.PermissionRowSettingsId);

                $("#UserIdDropdown > option").remove();
                $("#UserIdDropdown").html('<option value="">Select User Name</option>');
                $.each(response.Data.entity, function (id, option) {
                    $("#UserIdDropdown").append($(`<option value='${option.Id}'>${option.UserName}</option>`));
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
        $("#modalClientId").val(id);
        $("#exampleModal").modal('show');
    }

    function openBackwardModalSet(id) {
        var id = parseInt(id);
       
        $.ajax({
            type: "POST",
            url: "/Client/GetBackwardProcessModalData",
            cache: false,
            dataType: 'json',
            data: { "id": id },
            success: function (response) {
               
                // $("#RoleName").val(response.Data.RoleName);
                // $("#RoleId").val(response.Data.RoleId);
                // $("#PermissionRowSettingsId").val(response.Data.PermissionRowSettingsId);
                $("#roleDdlId_Backward > option").remove();
                $("#roleDdlId_Backward").html('<option value="">Select Role</option>');
                $.each(response.Data.roles, function (id, option) {
                    $("#roleDdlId_Backward").append($(`<option value='${option.Id}'>${option.RoleName}</option>`));
                });


                $("#UserIdDropdown_Backward > option").remove();
                $("#UserIdDropdown_Backward").html('<option value="">Select User Name</option>');
                // $.each(response.Data.entity, function (id, option) {
                //     $("#UserIdDropdown").append($(`<option value='${option.Id}'>${option.UserName}</option>`));
                // });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
        $("#backwardClientId").val(id);
        $("#backwardModal").modal('show');
    }

    function SaveMapToUser() {
        if (!$("#clientApprovelForm").valid()) {
            return;
        }

       
        var SenderRoleId = $("#RoleId").val();
        var PermissionRowSettingsId = $("#PermissionRowSettingsId").val();
        var receiverId = parseInt($("#UserIdDropdown").val());
        var sendingDateId = $("#SendingDateId").val();
        var sendingTimeId = $("#SendingTimeId").val();
        var remarkId = $("#RemarkId").val();
        var ClientID = $("#modalClientId").val();
        var ApprovalLogForClientReg = {
            "SenderId": 0,
            "SenderRoleId": SenderRoleId,
            "PermissionRowSettingsId": PermissionRowSettingsId,
            "ReceiverId": receiverId,
            "SendingDate": sendingDateId,
            "SendingTime": sendingTimeId,
            "Remark": remarkId,
            "ClientID": ClientID
        }

        $.ajax({
            type: "POST",
            url: "/Client/SaveMapToUser",
            data: ApprovalLogForClientReg,
            cache: false,
            dataType: 'json',
            success: function (response) {
                if (response.Message == "Success") {
                    swal({
                        title: "Success",
                        text: response.Message,
                        type: "success"
                    },
                        function () {
                            window.location.href = "/Client/PendingList";
                        }
                    );
                }
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });

    }
    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this imaginary file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, 
        function () {
            var data = { 'id': id };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/Client/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        swal("Deleted!", "Your imaginary file has been deleted.", "success");
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Your imaginary file has not been deleted.", "error");
                }
            });
        });
    }

    function Accept(id) {
        swal({
            title: "Are you sure?",
            text: "You will acceept the client!",
            type: "success",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Accept it!",
            closeOnConfirm: false
        },
        function() {

           
            var data = { 'id': id };

            $.ajax({
                type: "POST",
                url: "/Client/Accept",
                cache: false,
                data: data,
                dataType: 'json',
                success: function (response) {
                        if (response.Message == "Success") {
                            swal({
                                title: "Success",
                                text: response.Message,
                                type: "success"
                            },
                                function () {
                                    window.location.href = "/Client/PendingList";
                                }
                            );
                        }
                },
                error: function () {
                    $(".loader").fadeOut("slow");
                    swal(
                        'Unexpected',
                        'Unknown error occurred',
                        'error'
                    );
                }
            });
        });

    }

    function Reject(id) {
        swal({
            title: "Are you sure?",
            text: "You will reject the client!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Reject it!",
            closeOnConfirm: false
        },
            function () {

               
                var data = { 'id': id };

                $.ajax({
                    type: "POST",
                    url: "/Client/Reject",
                    cache: false,
                    data: data,
                    dataType: 'json',
                    success: function (response) {
                        $(".loader").fadeOut("slow");
                        swal(
                            'Sucess',
                            'Client Rejected Successfully',
                            'success'
                        );
                        window.location.href = "/Client/RejectedList";
                    },
                    error: function () {
                        $(".loader").fadeOut("slow");
                        swal(
                            'Unexpected',
                            'Unknown error occurred',
                            'error'
                        );
                    }
                });
            });

    }

    function getLogHistory(clientId) {
        var data = { 'clientId': clientId };
        $("#logHistoryModal").modal("show");
        $.ajax({
            type: "GET",
            url: "/Client/GetClientLogHistoryById",
            data: data,
            cache: false,
            dataType: 'json',
            success: function (response) {
                $('#logHistoryTableId').DataTable({
                    "bDestroy": true,

                    //"bServerSide": true,
                    //"bProcessing": true,
                    //"bSearchable": true,
                    //"order": [[1, 'asc']],
                    // "language": {
                    //     "emptyTable": "No record found.",
                    //     "processing":
                    //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                    // },
                    data: response.Data,

                    aoColumns: [
                        {
                            title: 'Sl',
                            data: null,
                            render: (data, type, row, meta) => (meta.row + 1)
                        },
                        { mData: 'Description' },
                        {
                            render: (data, type, row, meta) => {
                                return row.CreatedUserName;
                            },
                        },
                        {
                            render: (data, type, row, meta) => {
                                return moment(row.CreatedAt).zone('+0600').format("DD-MMM-YYYY HH:mm");
                            },
                        },
                        // {
                        //     render: (data, type, row, meta) => {
                        //         return moment(row.EndDate).format("DD-MM-YYYY");
                        //     },
                        // },
                        // { mData: 'Location' },
                        // {
                        //     render: (data, type, row, meta) => {

                        //         return "<a  href='/DepartmentalTraining/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/DepartmentalTraining/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                        //     },
                        // },
                    ],
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
    }

    function getCommentHistory(clientId) {
        var data = { 'clientId': clientId };
        $("#commentHistoryModal").modal("show");
        $.ajax({
            type: "GET",
            url: "/Client/GetClientCommentHistoryById",
            data: data,
            cache: false,
            dataType: 'json',
            success: function (response) {
                $('#commentHistoryTableId').DataTable({
                    "bDestroy": true,

                    //"bServerSide": true,
                    //"bProcessing": true,
                    //"bSearchable": true,
                    //"order": [[1, 'asc']],
                    // "language": {
                    //     "emptyTable": "No record found.",
                    //     "processing":
                    //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                    // },
                    data: response.Data,

                    aoColumns: [
                        {
                            title: 'Sl',
                            data: null,
                            render: (data, type, row, meta) => (meta.row + 1)
                        },
                        { mData: 'SenderName' },
                        { mData: 'ReceiverName' },
                        { mData: 'Remark' },
                        // { mData: 'Description' },
                        {
                            render: (data, type, row, meta) => {
                                return moment(row.CreatedAt).zone('+0600').format("DD-MMM-YYYY HH:mm");
                            },
                        },
                        // {
                        //     render: (data, type, row, meta) => {
                        //         return moment(row.EndDate).format("DD-MM-YYYY");
                        //     },
                        // },
                        // { mData: 'Location' },
                        // {
                        //     render: (data, type, row, meta) => {

                        //         return "<a  href='/DepartmentalTraining/Edit?id=" + row.Id + " ' $ type='button' data-bs-toggle='modal' data-bs-target='#exampleModal' class='btn btn-sm btn-primary'> Edit </a> <a href='/DepartmentalTraining/Details?id=" + row.Id + " ' class='btn btn-sm btn-info'>Details</a>  <button onclick='showDeleteConfirmMessage(" + row.Id + ")' class='btn btn-sm btn-danger'>Delete</button>"
                        //     },
                        // },
                    ],
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
    }

    $("#roleDdlId_Backward").change(function () {
       
        var roleId = $(this).val();
        var UserList = $("#UserIdDropdown_Backward");
        if (roleId != "" && roleId != undefined) {
            $.ajax({
                cache: false,
                type: "GET",
                url: "/Client/GetUsersByRoleId",
                data: { "roleId": roleId },
                success: function (data) {
                   
                    console.log(data);
                    UserList.html('<option value="">Choose..</option>');
                    $.each(data.Data, function (id, option) {
                        UserList.append($('<option></option>').val(option.Id).html(option.UserName));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve data.');
                }
            });
        }
    });

    function SaveBackwardProcess() {
        if (!$("#clientBackwardApprovelForm").valid()) {
            return;
        }

       
        //var SenderRoleId = $("#RoleId").val();
        var PermissionRowSettingsId = $("#PermissionRowSettingsId").val();
        var receiverId = parseInt($("#UserIdDropdown_Backward").val());
        var sendingDateId = $("#SendingDateId_Backward").val();
        var sendingTimeId = $("#SendingTimeId_Backward").val();
        var remarkId = $("#RemarkId_Backward").val();
        var ClientID = $("#backwardClientId").val();
        var ApprovalLogForClientReg = {
            "SenderId": 0,
            "SenderRoleId": 0,
            "PermissionRowSettingsId": PermissionRowSettingsId,
            "ReceiverId": receiverId,
            "SendingDate": sendingDateId,
            "SendingTime": sendingTimeId,
            "Remark": remarkId,
            "ClientID": ClientID
        }

        $.ajax({
            type: "POST",
            url: "/Client/SaveBackwardProcess",
            data: ApprovalLogForClientReg,
            cache: false,
            dataType: 'json',
            success: function (response) {
                alert("success");
                window.location.href = "/Client/PendingList";
                //committeeDesignationId.append($('<option></option>').val("").html("Select Designation"));
                //$.each(response.Entity, function (id, option) {
                //    committeeDesignationId.append($('<option></option>').val(option.Id).html(option.Name));
                //});
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });

    }
</script>