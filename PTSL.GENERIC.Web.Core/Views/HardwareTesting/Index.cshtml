@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.HardwareTestings.HardwareTestingVM>
@{
    ViewBag.Title = "Index";
    ViewBag.activeMenu = "Specification-Based Test Assessments";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Hardware Testing List</h4>
                </div>
                <div class="col-md-2 text-right">
                    <a href="/HardwareTesting/Create" class="badge badge-success badge-shadow"><img src="/img/plus-vector.png">Add New</a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive  mt-2 green-card">
                    <form action="Search" class="form-horizontal">
                        <div class="col-md-12 ">
                            <div class="row custom">
                                <div class="col-6 p-1" style="max-width: 350px;">
                                    <label class="m-0">Project <span style="color: red;"></span></label>
                                    @Html.DropDownList("ProjectRequestId", null, "Choose Project", htmlAttributes: new { @class = "form-control col-md-12" })
                                </div>
                                <div class="col-6 p-1" style="max-width: 350px;">
                                    <label class="m-0">Task <span style="color: red;"></span></label>
                                    @Html.DropDownList("TaskOfProjectId", null, "Choose Task", htmlAttributes: new { @class = "form-control col-md-12" })
                                </div>
                                <div class="col-6 p-1" style="max-width: 350px;">
                                    <label class="m-0">Test Item <span style="color: red;"></span></label>
                                    @Html.DropDownList("TestScopeId", null, "Choose Test Item", htmlAttributes: new { @class = "form-control col-md-12" })
                                </div>
                                <div class="col-6 pr-1" style="max-width: 350px;">
                                    <label class="m-0">Sub Item<span style="color: red;"></span></label>
                                    <input type="text" class="form-control col-md-12" id="SubItem" name="SubItem" value="@ViewBag.SubItem" placeholder="Enter Sub Item">
                                </div>
                            </div>

                        </div>

                        <div class="form-group col-md-12">
                            <button id="submit" class="btn btn-primary submit-btn pull-right btn-sm">Search</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Project</th>
                                <th>Task</th>
                                <th>Test Item</th>
                                <th>Sub Item</th>
                                <th>Test Result</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        <td>@i</td>

                                        <td>@data.ProjectRequest.ProjectName</td>
                                        <td>@data.TaskOfProject.TaskTitle</td>
                                        <td>@data.TestScope.TestItem</td>
                                        <td>@data.SubItem</td>
                                        <td>@data.TestResult</td>
                                        <td>
                                            <a href="/HardwareTesting/Edit?id=@data.Id" class="btn btn-icon" title="Edit"><img src="~/img/edit.png" /></a>
                                            @* <a href="/HardwareTesting/Details?id=@data.Id" class="btn btn-info btn-sm">Details</a>
                                            <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button> *@
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5
        });
        $("#ProjectRequestId").select2();
        $("#TaskOfProjectId").select2();
        $("#TestCaseId").select2();
    });
    
    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this imaginary file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = { 'id': id };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/HardwareTesting/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        swal("Deleted!", "Your imaginary file has been deleted.", "success");
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Your imaginary file has not been deleted.", "error");
                }
            });
        });
    }
</script>
<script>
    $("#ProjectRequestId").change(function () {
       
        var selectedItem = $(this).val();
        var TaskList = $("#TaskOfProjectId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Task/GetTaskListsByProJectId",
            data: { "id": selectedItem },
            success: function (data) {
               
                console.log(data);
                TaskList.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    TaskList.append($('<option></option>').val(option.Id).html(option.TaskTitle));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });

    // $("#TaskOfProjectId").change(function () {
    //    
    //     var selectedItem = $(this).val();
    //     var TestCaseList = $("#TestCaseId");
    //     if (selectedItem == "" || selectedItem == null) {
    //         return true;
    //     }

    //     $.ajax({
    //         cache: false,
    //         type: "GET",
    //         url: "/TestCase/GetTestCasesByTaskofProjectId",
    //         data: { "id": selectedItem },
    //         success: function (data) {
    //            
    //             console.log(data);
    //             TestCaseList.html('<option value="">Choose..</option>');
    //             $.each(data, function (id, option) {
    //                 TestCaseList.append($('<option></option>').val(option.Id).html(option.TestCaseNo));
    //             });
    //         },
    //         error: function (xhr, ajaxOptions, thrownError) {
    //             alert('Failed to retrieve data.');
    //         }
    //     });
    // });


</script>