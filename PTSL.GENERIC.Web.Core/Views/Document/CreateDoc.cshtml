
@{
    ViewBag.Title = "Create";
    var Message = ViewBag.Message;
}
@*<style>
    input, select {
        height: 30px !important;
        line-height: 10px !important;
        font-weight: 400 !important;
        color: black !important;
    }

    legend {
        font-weight: 500 !important;
        font-size: 20px !important;
    }
</style>*@

<link href="~/SummerNote/summernote.min.css" rel="stylesheet">
<div class="card">

    <div class="card-header">
        <h4>
            <a href="/AgreementDocument/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Create New Document
        </h4>
        <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#CertificationForm')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button>
    </div>

    <div class="card-body">
            <form id="DocumentForm" class="card-body">
                <div class="form-horizontal">
                    <div class="row custom">
                        <div class="col-md-6">
                            @for (int number = 0; number < 5; number++)
                            {
                                <div class="form-group form-float">
                                    <label class="form-label" for="termsDescription"><h5>HTML @(number + 1)</h5><span style="color:red">*</span></label>
                                    <div class="form-line">
                                        <textarea rows="500" id="HtmlText_@(number+1)" name="HtmlText_@(number)" class="form-control" required></textarea>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <button type="button" onclick="SaveDocuments()" class="btn btn-primary submit-btn pull-right btn-sm">Submit</button>
                    </div>
                </div>
            </form>
    </div>
    <hr />
    <div class="card-header pull-left">
        <!-- <a href="/Certification/Index" class="btn btn-warning">Return to Index</a> -->
    </div>
</div>

<script src="~/SummerNote/summernote.min.js"></script>
<script>
    $(document).ready(function () {
        for(var num = 0; num < 5; num++)
        {
            var id = "#HtmlText_" + num.toString();
            $(id).summernote();
        }
    });
    function SaveDocuments() {
       
        var formData = new FormData();
        var items = [];
        var html1 = $("#HtmlText_1").summernote('code');
        var item1 = {
            Id: "HtmlText_1",
            Text: html1
        }
        items.push(item1);

        var html2 = $("#HtmlText_2").summernote('code');
        var item2 = {
            Id: "HtmlText_2",
            Text: html2
        }
        items.push(item2);
        var html3 = $("#HtmlText_3").summernote('code');
        var item3= {
            Id: "HtmlText_3",
            Text: html3
        }
        items.push(item3);
        var html4 = $("#HtmlText_4").summernote('code');
        var item4 = {
            Id: "HtmlText_4",
            Text: html4
        }
        items.push(item4);

        var html5 = $("#HtmlText_5").summernote('code');
        var item5 = {
            Id: "HtmlText_5",
            Text: html5
        }
        items.push(item5);

        var documents = items.filter(Boolean);
        formData.append('Documents', JSON.stringify(documents));

        $.ajax({
            type: "POST",
            url: "/Document/CreateDocumentList",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
               
                console.log(data);
                window.open(data, '_blank');
               //  var filePath = "/uploads/Client/Documents/combined.pdf";

               //  // Create a temporary link element
               //  var link = document.createElement("a");
               //  link.href = filePath;

               //  // Set the download attribute to force the browser to download the file instead of navigating to it
               //  link.setAttribute("download", "");

               //  // Append the link to the document body
               //  document.body.appendChild(link);

               //  // Trigger a click event on the link to start the download
               //  link.click();

               //  // Remove the link from the document body after the download is initiated
               //  document.body.removeChild(link);
               // // window.open(data.filepath, '_blank');
            },
            error: function (xhr, textStatus, errorThrown) {
                // Handle error
            }
        });


    }
</script>