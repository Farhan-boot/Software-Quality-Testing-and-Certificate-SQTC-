@model IEnumerable<PTSL.GENERIC.Web.Core.Model.EntityViewModels.Project.ProjectRequestVM>
@{
   //ViewBag.Title = "Test Project Requests";
    ViewBag.activeMenu = "Pending Project Requests";
}
<style>
    td {
        padding-left: 3% !important;
        padding-top: 1% !important;
    }
</style>
<!-- Modal Start-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                @* <h5 class="modal-title" id="exampleModalLabel">Permission Settings</h5> *@
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="modalProjectId" />
                <form id="projectApprovelForm" class="card-body card-primary">
                    <div class="row  custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                <legend class="float-none w-auto">Forward Project Request</legend>
                                <div class="col-6" style="padding-left: 0px;float:left">
                                    <label class="m-0">User Role Name <span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="RoleName" name="RoleName" disabled>
                                    <input type="hidden" class="form-control" id="RoleId" name="RoleId" disabled>
                                    <input type="hidden" class="form-control" id="PermissionRowSettingsId" name="PermissionRowSettingsId" disabled>
                                </div>
                                <div class="col-6" style="padding-left: 0px;float:left">
                                    <label class="m-0">Select User: <span style="color: red;">*</span></label>
                                    <select id="UserIdDropdown" required>
                                    </select>
                                </div>

                                
                            </fieldset>
                        </div>
                    </div>
                    <div class="row custom">
                        <div class="col-12 p-1">
                            <fieldset class="p-2">
                                @* <div class="row" style="margin:2px">
                                    <div class="col-6" style="padding-left: 0px;float:left">
                                        <label class="m-0">Sending Date <span style="color: red;">*</span></label>
                                        <input type="date" id="SendingDateId" name="SendingDateId" placeholder="Enter Sending Date" required="">
                                    </div>
                                    <div class="col-6" style="padding-left: 0px">
                                        <label class="m-0">Sending Time <span style="color: red;">*</span></label>
                                        <input class="form-control" type="time" id="SendingTimeId" name="SendingTimeId" placeholder="Enter Sending Time" required="">
                                    </div>
                                </div> *@
                                <div class="col-12" style="padding-left: 0px">
                                    <label class="m-0">Remark</label>
                                    <input class="form-control" type="text" id="RemarkId" name="RemarkId" placeholder="Enter Remark">
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </form>
                
            </div>
            <div class="modal-footer">
                <button onclick="SaveMapToUser()" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-10">
                    <h4>Pending Project Requests</h4>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive mt-2 green-card">
                    <form action="Search" class="form-horizontal">
                        <div class="col-md-12">
                            <div class="row custom">
                                <div class="form-group col-md-4">
                                    <label for="inputOrganizationName">Project Name</label>
                                    <input type="text" class="form-control" id="ProjectName" value="@ViewBag.ProjectName" name="ProjectName" placeholder="Enter Project Name">
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="inputClientStatus">Project Type <span style="color:red;"></span></label>
                                    @Html.DropDownList("ProjectType", null, "Choose..", htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="inputClientStatus">Requested By <span style="color:red;"></span></label>
                                    @Html.DropDownList("ClientId", null, "Choose..", htmlAttributes: new { @class = "form-control" })
                                </div>

                                <div class="form-group col-md-4">
                                    <label for="inputMobileNumber">Project Code</label>
                                    <input type="text" class="form-control" id="ProjectCode" value="@ViewBag.ProjectCode" name="ProjectCode" placeholder="Enter Project Code">
                                </div>
                                <div class="form-group col-md-4">
                                    <label for="inputCreateTime">Request Date</label>
                                    <input type="date" class="form-control" id="RequestDate" value="@ViewBag.RequestDate" name="RequestDate">
                                </div>

                                @*  <div class="form-group col-md-4">
                                <label for="inputusertype">user type <span style="color:red;">*</span></label>
                                @html.dropdownlist("usertypeid", null, "choose..", htmlattributes: new { @class = "form-control", @required = "required" })
                                </div> *@
                            </div>

                        </div>

                        <div class="form-group col-md-12">
                            <button id="submit" class="btn btn-primary submit-btn pull-right btn-sm">Search</button>
                        </div>
                    </form>
                </div>

            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="tableExport_filter" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Project ID</th>
                                <th>Project Name</th>
                                <th>Project Type</th>
                                <th>Requested By</th>
                                <th>Requested Date</th>
                                <th>Approval Status</th>
                                <th>Approval Message</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>@data.ProjectCode</td>
                                        <td>@data.ProjectName</td>
                                        <td>@data.ProjectType</td>
                                        <td>@data.Client?.ClientName</td>
                                        <td>@data.RequestDate.ToString("dd/MM/yyyy")</td>
                                        <td>@data.ProjectApprovalStatus</td>
                                        <td>@data.ApprovalMessage</td>
                                        <td>
                                            <a onclick="getLogHistory(@data.Id)" class="btn btn-info btn-sm"><i class="fa fa-history" title="View Log History"></i></a>
                                            <a onclick="getCommentHistory(@data.Id)" class="btn btn-info btn-sm"><i class="fa fa-comment" title="View Comment History"></i></a>
                                            @if (ViewBag.HasEditDeletePermission)
                                            {
                                                @* <a href="/ProjectRequest/Edit?id=@data.Id&&returnUrl=/ProjectRequest/PendingList" class="btn btn-primary btn-sm">Edit</a> *@
                                                @* <button onclick="showDeleteConfirmMessage(@data.Id)" class="btn btn-danger btn-sm">Delete</button> *@
                                            }
                                            
                                            @if (data.IsApprovalShow)
                                            {
                                                <a onclick="openModalSet(@data.Id)" class="btn btn-success btn-sm"> <i title="Forward" class="fa fa-forward"></i></a>
                                            }
                                            else if (!data.IsApprovalShow && data.IsAcceptOrReject && data.ApprovalMessage == null)
                                            {
                                                <button onclick="Accept(@data.Id)" class="btn btn-icon" title="Accept"><img src="~/img/check.png" /></button>
                                                <button onclick="Reject(@data.Id)" class="btn btn-icon" title="Reject"><img src="~/img/remove.png" /></button>
                                                @* <button class="btn btn-primary btn-sm">Backword</button> *@ 
                                            }
                                            @* else
                                            {
                                                @data.ApprovalMessage
                                            } *@
                                            <a href="/ProjectRequest/Details?id=@data.Id&backUrl=/ProjectRequest/Index" class="btn btn-icon" title="Details"><img src="~/img/view.png" /></a>
                                        </td>

                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Project Comment  Modal Start-->
<div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="commentodalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logHistoryModalLabel">Reject the Project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive mt-2 green-card">
                    <form action="Reject" method="post" id="commentModalData" form-horizontal">
                        <input type="hidden" name="id" id="ProjectId" value="ProjectId" />

                        <div class="col-md-12">
                            <div class="row custom">
                                <div class="form-group col-md-12">
                                    <label for="inputOrganizationName">Rejection Comment</label>
                                    <textarea type="text" class="form-control" id="RejectionComment" name="RejectionComment" placeholder="Enter Rejection Comment"> </textarea>
                                </div>
                            </div>

                        </div>
                        <div class="form-group col-md-12">
                            <button type="button"  onclick="Rejection()" class="btn btn-primary submit-btn pull-right btn-sm">Reject</button>
                        </div>
                    </form>
                </div>

            </div>
            
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->

<!-- Project Log History Modal Start-->
<div class="modal fade" id="logHistoryModal" tabindex="-1" role="dialog" aria-labelledby="logHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="logHistoryModalLabel">Project Log History</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="logHistoryTableId" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Description</th>
                                <th>Created By</th>
                                <th>Created Date</th>
                            </tr>
                        </thead>

                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->
<!-- Project Comment History Modal Start-->
<div class="modal fade" id="commentHistoryModal" tabindex="-1" role="dialog" aria-labelledby="commentHistoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentHistoryModalLabel">Project Approval Process Comments </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="commentHistoryTableId" style="width:100%;">
                        <thead>
                            <tr>
                                <th>SL</th>
                                <th>Sender</th>
                                <th>Receiver</th>
                                <th>Comment</th>
                                <th>Created Date</th>
                            </tr>
                        </thead>

                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<!-- Modal End-->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">

<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script>
    $(document).ready(function () {
        $('#tableExport_filter').DataTable({
            pageLength: 5
        });
    });
    function openModalSet(id) {
       
        var id = parseInt(id);
       
        $.ajax({
            type: "POST",
            url: "/ProjectRequest/GetApprovalProcessModalData",
            cache: false,
            dataType: 'json',
            data: { "id": id },
            success: function (response) {
               

                $("#RoleName").val(response.Data.RoleName);
                $("#RoleId").val(response.Data.RoleId);
                $("#PermissionRowSettingsId").val(response.Data.PermissionRowSettingsId);

                $("#UserIdDropdown > option").remove();
                $("#UserIdDropdown").html('<option value="">Select User Name</option>');
                $.each(response.Data.entity, function (id, option) {
                    $("#UserIdDropdown").append($(`<option value='${option.Id}'>${option.UserName}</option>`));
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
        $("#modalProjectId").val(id);
        $("#exampleModal").modal('show');
    
    }

    function SaveMapToUser() {
       
        if (!$("#projectApprovelForm").valid()) {
            return;
        }
        var SenderRoleId = $("#RoleId").val();
        var PermissionRowSettingsId = $("#PermissionRowSettingsId").val();
        var receiverId = parseInt($("#UserIdDropdown").val());
        var sendingDateId = $("#SendingDateId").val();
        var sendingTimeId = $("#SendingTimeId").val();
        var remarkId = $("#RemarkId").val();
        var ProjectID = $("#modalProjectId").val();
        var ApprovalLogForClientReg = {
            "SenderId": 0,
            "SenderRoleId": SenderRoleId,
            "PermissionRowSettingsId": PermissionRowSettingsId,
            "ReceiverId": receiverId,
            "SendingDate": sendingDateId,
            "SendingTime": sendingTimeId,
            "Remark": remarkId,
            "ProjectID": ProjectID
        }

        $.ajax({
            type: "POST",
            url: "/ProjectRequest/SaveMapToUser",
            data: ApprovalLogForClientReg,
            cache: false,
            dataType: 'json',
            success: function (response) {

                if (response.Message == "Success") {
                    swal({
                        title: "Success",
                        text: response.Message,
                        type: "success"
                    },
                        function () {
                            window.location.href = "/ProjectRequest/PendingList";
                        }
                    );
                }
                
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });

    }


    function showDeleteConfirmMessage(id) {
        swal({
            title: "Are you sure?",
            text: "You will not be able to recover this imaginary file!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false
        }, function () {
            var data = { 'id': id };
            $.ajax({
                type: "GET",
                contentType: "application/json; charset=utf-8",
                url: "/ProjectRequest/Delete",
                data: data,
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        swal("Deleted!", "Your imaginary file has been deleted.", "success");
                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Deleted!", "Your imaginary file has not been deleted.", "error");
                }
            });
        });
    }

    function Accept(id) {
        swal({
            title: "Are you sure?",
            text: "You will accept the project!",
            type: "success",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Accept it!",
            closeOnConfirm: false
        },
            function () {

               
                var data = { 'id': id };

                $.ajax({
                    type: "POST",
                    url: "/ProjectRequest/Accept",
                    cache: false,
                    data: data,
                    dataType: 'json',
                    success: function (response) {
                        if (response.Message == "Success") {
                            swal({
                                title: "Success",
                                text: response.Message,
                                type: "success"
                            },
                                function () {
                                    window.location.href = "/ProjectRequest/PendingList";
                                }
                            );
                        }
                    },
                    error: function () {
                        $(".loader").fadeOut("slow");
                        swal(
                            'Unexpected',
                            'Unknown error occurred',
                            'error'
                        );
                    }
                });
            });

    }

    function Reject(id) {
        $("#ProjectId").val(id);
      $("#commentModal").modal('show');
    }

    function Rejection() { 
       
        $("#commentModalData").submit();
    }

    function getLogHistory(projectId) {
        var data = { 'projectId': projectId };
        $("#logHistoryModal").modal("show");
        $.ajax({
            type: "GET",
            url: "/ProjectRequest/GetProjectLogHistoryById",
            data: data,
            cache: false,
            dataType: 'json',
            success: function (response) {
                $('#logHistoryTableId').DataTable({
                    "bDestroy": true,

                    //"bServerSide": true,
                    //"bProcessing": true,
                    //"bSearchable": true,
                    //"order": [[1, 'asc']],
                    // "language": {
                    //     "emptyTable": "No record found.",
                    //     "processing":
                    //         '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
                    // },
                    data: response.Data,

                    aoColumns: [
                        {
                            title: 'Sl',
                            data: null,
                            render: (data, type, row, meta) => (meta.row + 1)
                        },
                        { mData: 'Description' },
                        {
                            render: (data, type, row, meta) => {
                                return row.CreatedUserName;
                            },
                        },
                        {
                            render: (data, type, row, meta) => {
                                return moment(row.CreatedAt).format("DD-MM-YYYY");
                            },
                        },
                    ],
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
    }
    function getCommentHistory(projectId) {
        var data = { 'projectId': projectId };
        $("#commentHistoryModal").modal("show");
        $.ajax({
            type: "GET",
            url: "/ProjectRequest/GetProjectCommentHistoryById",
            data: data,
            cache: false,
            dataType: 'json',
            success: function (response) {
                $('#commentHistoryTableId').DataTable({
                    "bDestroy": true,
                    data: response.Data,
                    aoColumns: [
                        {
                            title: 'Sl',
                            data: null,
                            render: (data, type, row, meta) => (meta.row + 1)
                        },
                        { mData: 'SenderName' },
                        { mData: 'ReceiverName' },
                        { mData: 'Remark' },
                        {
                            render: (data, type, row, meta) => {
                                return moment(row.CreatedAt).zone('+0600').format("DD-MMM-YYYY HH:mm");
                            },
                        },
                    ],
                });
            },
            error: function () {
                $(".loader").fadeOut("slow");
                swal(
                    'Unexpected',
                    'Unknown error occurred',
                    'error'
                );
            }
        });
    }
</script>
