@model PTSL.GENERIC.Web.Core.Model.EntityViewModels.Meetings.MeetingVM
@{
    ViewBag.Title = "Create";
    var Message = ViewBag.Message;
    ViewBag.activeMenu = "Meetings";
}
@*<style>
    input, select {
        height: 30px !important;
        line-height: 10px !important;
        font-weight: 400 !important;
        color: black !important;
    }

    legend {
        font-weight: 500 !important;
        font-size: 20px !important;
    }
</style>*@

<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.1.0/css/select2.min.css" rel="stylesheet" />

<div class="card">

    <div class="card-header">
        <h4>
            <a href="/Meeting/Index" class="mr-1 back">
                <svg width="20" height="20" viewBox="0 0 32 32">
                    <path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z" />
                </svg>
            </a>
            Create New Meeting
        </h4>
        @* <button class="ml-auto reset btn btn-sm" onclick="resetFromData('#MeetingForm')">
            <svg class="rotate180z" width="16" height="16" viewBox="0 0 32 32">
                <path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor" />
            </svg>
            Reset
        </button> *@
    </div>



    <div class="card-body">
        @* @using (Html.BeginForm( new { id = "MeetingForm" }))
        { *@
        <form id="meetingForm">
            <div class="form-horizontal mt-2 gray-card">

                <div class="row custom">
                    <div class="col-12 p-1">
                        <fieldset class="p-2">
                            <legend class="float-none w-auto">Meeting Details</legend>
                            <div class="row">
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label class="m-0">Project <span style="color: red;">*</span></label>
                                    @Html.DropDownList("ProjectRequestId", null, "Choose Project", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                                </div>
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label class="m-0">Meeting Type <span style="color: red;">*</span></label>
                                    @Html.DropDownList("MeetingTypeId", null, "Choose Project", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                                </div>

                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label for="inputMeeting">Meeting Title <span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="MeetingTitle" name="MeetingTitle" placeholder="Enter Meeting Name" required>
                                </div>
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label for="inputMeeting">Meeting Entry Pass <span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="MeetingEntryPass" name="MeetingEntryPass" placeholder="Enter Meeting Entry Pass" required>
                                </div>
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label for="inputMeeting">Meeting Start Time <span style="color: red;">*</span></label>
                                    <input type="datetime-local" class="form-control" id="MeetingStartTime" name="MeetingStartTime" placeholder="Enter Meeting Start Time" required>
                                </div>
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label for="inputMeeting">Meeting End Time <span style="color: red;">*</span></label>
                                    <input type="datetime-local" class="form-control" id="MeetingEndTime" name="MeetingEndTime" placeholder="Enter Meeting End Time" required>
                                </div>
                                <div class="col-6 pr-1" style="max-width: 245px;">
                                    <label for="inputMeeting">Meeting Agenda<span style="color: red;">*</span></label>
                                    <textarea type="text" class="form-control" id="MeetingAgenda" name="MeetingAgenda" placeholder="Enter Meeting Agenda" required></textarea>
                                </div>
                                @* <div class="col-6 pr-1" style="max-width: 245px;">
                                <label for="inputMeeting">Remarks</label>
                                <input type="text" class="form-control" id="Remarks" name="Remarks" placeholder="Remarks" required>
                                </div> *@
                                <div class="col-6 p-1">
                                    <label class="m-0">Client <span style="color: red;">*</span></label>
                                    @Html.DropDownList("ClientUserId", null, "Choose Client User", htmlAttributes: new { @id = "ClientUserId", @class = "form-control col-md-12", @multiple = "multiple", @required = "required", })
                                </div>
                                <div class="col-6 p-1">
                                    <label class="m-0">Sqtc <span style="color: red;">*</span></label>
                                    @Html.DropDownList("SqtcUserId", null, "Choose HSQTC User", htmlAttributes: new { @id = "SqtcUserId", @class = "form-control col-md-12", @multiple = "multiple", @required = "required", })
                                </div>
                            </div>
                            @* <div class="col-6 pr-1" style="max-width: 500px;">

                            @foreach (var item in Model.SqtcUser)
                            {

                            <div class="d-flex form-form-control col-3">
                            <input type="checkbox" value="@item.Id" name="selectedItems" />
                            <span style="margin-left: 5px;">@item.UserName</span>
                            </div>

                            }


                            </div> *@
                        </fieldset>
                    </div>

                </div>

                <div class="form-group col-md-12">
                    <button type="button" onclick="SaveData()" class="btn btn-primary submit-btn pull-right btn-sm">Submit</button>
                </div>
            </div>
        </form>
    @*     } *@
    </div>
    <hr />
    <div class="card-header pull-left">
        <!-- <a href="/Meeting/Index" class="btn btn-warning">Return to Index</a> -->
    </div>
</div>


<script>
    
    $(document).ready(function () {
       
        $('#ClientUserId').select2();
        $('#SqtcUserId').select2();

        $("#meetingForm").validate({
            // Specify validation rules
            rules: {
                ProjectRequestId: "required"
            },

        });

    });
    
    $("#ProjectRequestId").change(function () {
       
        var selectedItem = $(this).val();
        var UserList = $("#ClientUserId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }

        $.ajax({
            cache: false,
            type: "GET",
            url: "/Meeting/GetClientUserByProjectID",
            data: { "projectId": selectedItem },
            success: function (data) {
               
                console.log(data);
                UserList.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    UserList.append($('<option></option>').val(option.Id).html(option.UserName));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve data.');
            }
        });
    });
    
    function SaveData() {
        if (!$("#meetingForm").valid()) {
            return;
        }
        var itemDetails=[];
       
        var ClientselectedValues = $('#ClientUserId').val();
        var SqtcselectedValues = $('#SqtcUserId').val();

        console.log(ClientselectedValues);

        ClientselectedValues.forEach(function (value) {
            // Push each selected value to your existing array
            itemDetails.push({
                AttendeduserId: value
            });
        });
        SqtcselectedValues.forEach(function (value) {
            // Push each selected value to your existing array
            itemDetails.push({
                AttendeduserId: value
            });
        });

        console.log(itemDetails);
        var formData = new FormData();

        formData.append('ProjectRequestId', $("#ProjectRequestId").val());
        formData.append('MeetingTypeId', $("#MeetingTypeId").val());
        formData.append('MeetingTitle', $("#MeetingTitle").val());
        formData.append('MeetingEntryPass', $("#MeetingEntryPass").val());
        formData.append('MeetingStartTime', $("#MeetingStartTime").val());
        formData.append('MeetingEndTime', $("#MeetingEndTime").val());
        formData.append('MeetingAgenda', $("#MeetingAgenda").val());
        formData.append('Remarks', $("#Remarks").val());
        var accptedUserMeetings = itemDetails.filter(Boolean);
        formData.append('accptedUserMeetings', JSON.stringify(accptedUserMeetings))
        $.ajax({
            type: "POST",
            url: "/Meeting/Create",
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            dataType: 'json',
            success: function (response) {
               
                if (response == "Success") {
                    swal({
                        title: "Success",
                        text: response.Message,
                        type: "success"
                    },
                        function () {
                            window.location.href = "/Meeting/Index";
                        }
                    );
                }
                else {
                    window.location.href = "/Meeting/Create";
                }

            }
        });
    }

</script>